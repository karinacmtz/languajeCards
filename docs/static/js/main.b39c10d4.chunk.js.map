{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","className","style","background","src","alt","protoTypes","PropTypes","string","Cards","map","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAMMA,EAAO,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC/B,OACI,sBAAKC,UAAU,OACfC,MAAO,CACHC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MAFd,UAKI,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QAMjBD,EAAKU,WAAa,CACdT,KAAMU,IAAUC,OAChBV,IAAKS,IAAUC,OACfT,OAAQQ,IAAUC,OAClBR,OAAQO,IAAUC,QAGPZ,QCgCAa,EAxDD,WAoCV,OACI,mCAnCS,CACT,CACE,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEZ,CACE,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAGZ,CACI,KAAQ,UACR,IAAO,4CACP,OAAU,UACV,OAAU,YAQDC,KAAI,YAAkC,IAAhCb,EAA+B,EAA/BA,KAAMc,EAAyB,EAAzBA,IAAKZ,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,OAC1B,OACI,cAAC,EAAD,CAEIH,KAAQA,EACRC,IAAMa,EACNZ,OAAUA,EACVC,OAAUA,GAJHH,SC7BpBe,EAJH,WACV,OAAO,cAAC,EAAD,KCFMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b39c10d4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes  from 'prop-types';\r\n\r\n//Importar los estilos\r\nimport './Card.css';\r\n\r\nconst Card = ({ lang, img, fcolor, scolor}) => {\r\n    return (\r\n        <div className=\"card\"\r\n        style={{\r\n            background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\r\n        }}\r\n        >\r\n            <img src={img} alt=\"lang.svg\"/>\r\n            <h1>{lang}</h1>\r\n        </div>\r\n    )\r\n};\r\n\r\n//Definiendo los proptypes de Card\r\nCard.protoTypes = {\r\n    lang: PropTypes.string,\r\n    img: PropTypes.string,\r\n    fcolor: PropTypes.string,\r\n    scolor: PropTypes.string\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cards = () => {\r\n\r\n    const data = [\r\n        {\r\n          \"lang\": \"Python\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\r\n          \"fcolor\": \"#00c3ff\",\r\n          \"scolor\": \"#ffff1c\"\r\n        },\r\n        {\r\n          \"lang\": \"Java\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\r\n          \"fcolor\": \"#D31027\",\r\n          \"scolor\": \"#EA384D\"\r\n        },\r\n        {\r\n          \"lang\": \"React\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\r\n          \"fcolor\": \"#000428\",\r\n          \"scolor\": \"#004e92\"\r\n        },\r\n        {\r\n          \"lang\": \"Perl\",\r\n          \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\r\n          \"fcolor\": \"#cc2b5e\",\r\n          \"scolor\": \"#753a88\"\r\n        },\r\n\r\n        {\r\n            \"lang\": \"C sharp\",\r\n            \"url\": \"https://cdn.svgporn.com/logos/c-sharp.svg\",\r\n            \"fcolor\": \"#e35a0b\",\r\n            \"scolor\": \"#e8be17\"\r\n          }\r\n      ]      \r\n\r\n    return (\r\n        <>\r\n            {/*Usando la funcion map para iterar la data y crear los Cards*/}\r\n            {\r\n                data.map(({lang, url, fcolor, scolor}) => {\r\n                    return(\r\n                        <Card\r\n                            key = {lang}\r\n                            lang = {lang}\r\n                            img ={url}\r\n                            fcolor = {fcolor}\r\n                            scolor = {scolor}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cards;","/* import './App.css';\nimport  Contador  from './components/Contador';\n\nconst App = () => {\n  return <Contador inicial={0} factor={1} />;//usando los props\n};\n\nexport default App; */\n/////////////////////////////////////////////////////////////\n\n//import  Card  from './components/Card';\nimport  Cards  from './components/Cards';\n\nconst App = () => {\n  return <Cards />;\n};\n\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}